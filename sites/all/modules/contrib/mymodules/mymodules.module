<?php

/**
 * @file
 * An API for creating fillable, persistent checklists.
 *
 * Provides an interface for creating checklists that track progress with
 * completion times and users.
 */

/**
 * Access callback: Checks the current user's access to a given checklist.
 *
 * @param string $id
 *   The checklist ID.
 * @param string $operation
 *   (optional) The operation to test access for. Accepted values are "view",
 *   "edit", and "any". Defaults to "any".
 *
 * @return bool
 *   Returns TRUE if the current user has access to perform a given operation on
 *   the specified checklist, or FALSE if not.
 */
function mymodules_form_page_node_form_alter(&$form, &$form_state) { 
    $form['extract-tags'] = array(
		'#type' => 'button',
		'#value' => t("Extract tags"),
		'#ajax' => array(
			'callback' => 'mymodules_get_tag_form_callback',
			'wrapper' => 'extract_tag_unique_id',
			'event' => 'click',
			'method' => 'replace',
		),
		'#executes_submit_callback' => false,
	);
	$array = array(0,1,3,4,5);
	foreach($array as $key => $value) {
		 
		 unset($form["extract-tags-$value"]);
	  }
	
	$form['field_test']['und'][0]['value']['#prefix'] = '<div id="extract_tag_unique_id">';
	$form['field_test']['und'][0]['value']['#suffix'] = '</div>';
    if (!empty($form_state['values']['body'])) {
	  unset($form_state['input']['field_test']['und'][0]['value']);
	  $array = array(0,1,3,4,5);
	  $form['field_test']['und'][0]['value']['#default_value'] = implode(",", $array );
	}
	return $form;
}

function mymodules_get_tag_form_callback($form, $form_state) {
	$form_r[] = $form['field_test'];
	
		$array = explode(",",$form['field_test']['und'][0]['value']['#default_value']);
		
	    foreach($array as $key => $value) {
			$elname = "extract-tags-$value";
			unset($form["$elname"]);
			if(!isset($form["$elname"])) {
			 $form["$elname"] = array(
				'#type' => 'button',
				'#value' => "$value",
				'#attributes' => array(
				 'name' => "etags_$value",
				 'id' => "etags_$value",
			   ),
			 );
			 $form_r[] = $form["$elname"];
		}
		 
	  }
	
	$form_state['rebuild'] = TRUE;
  return $form_r;
}



/**
 * Implements hook_js_defer_info().
 */
function mymodules_init() {
  global $user;
  global $conf;
  if($user->uid == 1) {
    $conf['preprocess_css'] = FALSE;
    // JS can be disabled as follows:
    $conf['preprocess_js'] = FALSE;
  }
}